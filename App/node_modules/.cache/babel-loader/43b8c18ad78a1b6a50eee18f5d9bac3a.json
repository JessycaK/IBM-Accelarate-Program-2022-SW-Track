{"ast":null,"code":"var _jsxFileName = \"/Users/jessycakoufidissa/Desktop/IBM_Accelarate_Program/to-do-list_week5-JessycaK/src/component/AddTodo.js\";\nimport Axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport { DesktopDatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddTodo extends Component {\n  // Create a local react state of the this component with both content date property set to nothing.\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        content: event.target.value,\n        date: Date().toLocaleString(\"en-US\")\n      });\n    };\n\n    this.handleDateChange = event => {\n      let date = null;\n\n      if (event != null) {\n        date = new Date(event).toLocaleDateString();\n      }\n\n      this.setState({\n        duedate: date\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const jsonObject = {\n        id: this.state.id,\n        task: this.state.content,\n        currentDate: this.state.date,\n        dueDate: this.state.duedate\n      };\n      Axios({\n        method: \"POST\",\n        url: \"http://localhost:8080/add/item\",\n        data: {\n          jsonObject\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        console.log(res.data.message);\n      });\n\n      if (this.state.content.trim()) {\n        this.props.addTodo(this.state);\n        this.setState({\n          content: \"\",\n          date: \"\",\n          duedate: null\n        });\n      }\n    };\n\n    this.state = {\n      content: \"\",\n      date: \"\",\n      duedate: null\n    };\n  } // The handleChange function updates the react state with the new input value provided from the user and the current date/time.\n  // \"event\" is the defined action a user takes. In this case, the event is triggered when the user types something\n  // into the text field.\n\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // 1. When rendering a component, you can render as many elements as you like as long as it is wrapped inside\n      // one div element.\n      // 2. The return statement should include a text field input with the handleChange function from above that\n      // is passed into an onChange event.\n      // 3. The return should also include a button with the handleSubmit function from above that is passed into\n      // an OnClick event.\n      // 4. The value of the text field also should reflect the local state of this component.\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Add New Item\",\n          variant: \"outlined\",\n          onChange: this.handleChange,\n          value: this.state.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n            id: \"new-item-date\",\n            label: \"Due Date\",\n            value: this.state.duedate,\n            onChange: this.handleDateChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginLeft: \"10px\"\n          },\n          onClick: this.handleSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nexport default AddTodo;","map":{"version":3,"names":["Axios","React","Component","Button","TextField","DesktopDatePicker","LocalizationProvider","AdapterDateFns","AddTodo","constructor","handleChange","event","setState","content","target","value","date","Date","toLocaleString","handleDateChange","toLocaleDateString","duedate","handleSubmit","preventDefault","jsonObject","id","state","task","currentDate","dueDate","method","url","data","headers","then","res","console","log","message","trim","props","addTodo","render","params","marginLeft"],"sources":["/Users/jessycakoufidissa/Desktop/IBM_Accelarate_Program/to-do-list_week5-JessycaK/src/component/AddTodo.js"],"sourcesContent":["import Axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport { DesktopDatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\n\nclass AddTodo extends Component {\n  // Create a local react state of the this component with both content date property set to nothing.\n  constructor() {\n    super();\n    this.state = {\n      content: \"\",\n      date: \"\",\n      duedate: null,\n    };\n  }\n  // The handleChange function updates the react state with the new input value provided from the user and the current date/time.\n  // \"event\" is the defined action a user takes. In this case, the event is triggered when the user types something\n  // into the text field.\n  handleChange = (event) => {\n    this.setState({\n      content: event.target.value,\n      date: Date().toLocaleString(\"en-US\"),\n    });\n  };\n\n  handleDateChange = (event) => {\n    let date = null;\n    if (event != null) {\n      date = new Date(event).toLocaleDateString();\n    }\n    this.setState({\n      duedate: date,\n    });\n  };\n  // The handleSubmit function collects the forms input and puts it into the react state.\n  // event.preventDefault() is called to prevents default event behavior like refreshing the browser.\n  // this.props.addTodo(this.state) passes the current state (or user input and current date/time) into the addTodo function defined\n  // in the Home.js file which then adds the input into the list.\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const jsonObject = {\n      id: this.state.id,\n      task: this.state.content,\n      currentDate: this.state.date,\n      dueDate: this.state.duedate,\n    };\n    Axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/add/item\",\n      data: { jsonObject },\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => {\n      console.log(res.data.message);\n    });\n    if (this.state.content.trim()) {\n      this.props.addTodo(this.state);\n      this.setState({\n        content: \"\",\n        date: \"\",\n        duedate: null,\n      });\n    }\n  };\n  render() {\n    return (\n      // 1. When rendering a component, you can render as many elements as you like as long as it is wrapped inside\n      // one div element.\n      // 2. The return statement should include a text field input with the handleChange function from above that\n      // is passed into an onChange event.\n      // 3. The return should also include a button with the handleSubmit function from above that is passed into\n      // an OnClick event.\n      // 4. The value of the text field also should reflect the local state of this component.\n      <div>\n        <TextField\n          label=\"Add New Item\"\n          variant=\"outlined\"\n          onChange={this.handleChange}\n          value={this.state.content}\n        />\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DesktopDatePicker\n            id=\"new-item-date\"\n            label=\"Due Date\"\n            value={this.state.duedate}\n            onChange={this.handleDateChange}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n        <Button\n          style={{ marginLeft: \"10px\" }}\n          onClick={this.handleSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default AddTodo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}